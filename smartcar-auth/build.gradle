buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.10'
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
    id 'org.jetbrains.kotlin.android'
}

group = libGroup
version = libVersion

android {
    namespace "com.smartcar.sdk"

    compileSdkVersion 34
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34

        buildConfigField("String", "VERSION_NAME", "\"${project.version}\"")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        buildConfig true
    }
    lintOptions {
        disable 'UnusedResources'
        abortOnError true
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.core:core-ktx:1.13.1"
    implementation "androidx.activity:activity-ktx:1.9.2"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.1"
    androidTestImplementation 'androidx.annotation:annotation:1.8.2'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    testAnnotationProcessor 'com.google.auto.service:auto-service:1.0-rc4'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.1.0'
    testImplementation 'org.robolectric:robolectric:4.13'
}

/**
 * Configures packaging of modules/artifacts to publish.
 *
 * @plugin maven-publish
 */
publishing {
    publications {
        release(MavenPublication) {
            afterEvaluate {
                from components.release
            }

            groupId libGroup
            artifactId libName
            version libVersion

            pom {
                // https://central.sonatype.org/publish/requirements/#sufficient-metadata
                name = libName
                description = libDescription
                url = 'https://github.com/smartcar/android-sdk'

                packaging 'aar'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'smartcar'
                        name = 'Smartcar'
                        email = 'hello@smartcar.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/smartcar/android-sdk.git'
                    developerConnection = 'scm:git:ssh://github.com:smartcar/android-sdk.git'
                    url = 'https://github.com/smartcar/android-sdk.git'
                }
            }
        }
    }
}

/**
 * Requires the following environment variables to be set:
 *  - ORG_GRADLE_PROJECT_signingKey
 *  - ORG_GRADLE_PROJECT_signingPassword
 *
 * @see https://docs.gradle.org/current/userguide/signing_plugin.html#sec:in-memory-keys
 */
afterEvaluate {
    if (!project.gradle.startParameter.taskNames.any { it.contains('publishToMavenLocal') }) {
        signing {
            useInMemoryPgpKeys findProperty("signingKey"), findProperty("signingPassword")
            sign publishing.publications.release
        }
    }
}
